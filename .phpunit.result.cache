C:37:"PHPUnit\Runner\DefaultTestResultCache":17861:{a:2:{s:7:"defects";a:86:{s:15:"TestTest::test1";i:4;s:44:"Tests\Unit\ValidatorTest::testGetExistsWorks";i:3;s:50:"Tests\Unit\ValidatorTest::testValidByteLengthWorks";i:3;s:45:"Tests\Unit\ValidatorTest::testValidCharsWorks";i:3;s:49:"Tests\Unit\ValidatorTest::testCustomEntitiesWorks";i:3;s:43:"Tests\Unit\ValidatorTest::testValidUsername";i:4;s:40:"Tests\Unit\ValidatorTest::testValidChars";i:3;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #0";i:4;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #3";i:4;s:56:"Tests\Unit\ValidatorTest::testGetExists with data set #0";i:4;s:56:"Tests\Unit\ValidatorTest::testGetExists with data set #1";i:4;s:56:"Tests\Unit\ValidatorTest::testGetExists with data set #2";i:4;s:40:"Tests\Unit\ValidatorTest::testPostExists";i:4;s:61:"Tests\Unit\ValidatorTest::testValidGuestname with data set #0";i:4;s:59:"Tests\Unit\ValidatorTest::testValidMessage with data set #2";i:4;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #3";i:4;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #5";i:4;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #4";i:4;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #6";i:4;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #7";i:4;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #0";i:4;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #1";i:4;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #2";i:4;s:61:"Tests\Unit\ValidatorTest::testSanitizeGender with data set #4";i:4;s:7:"Warning";i:6;s:57:"Tests\Unit\ValidatorTest::testPostExists with data set #0";i:4;s:57:"Tests\Unit\ValidatorTest::testPostExists with data set #1";i:4;s:57:"Tests\Unit\ValidatorTest::testPostExists with data set #2";i:4;s:62:"Tests\Unit\ValidatorTest::testValidByteLength with data set #0";i:4;s:62:"Tests\Unit\ValidatorTest::testValidByteLength with data set #1";i:4;s:62:"Tests\Unit\ValidatorTest::testValidByteLength with data set #2";i:4;s:62:"Tests\Unit\ValidatorTest::testValidByteLength with data set #3";i:4;s:62:"Tests\Unit\ValidatorTest::testValidByteLength with data set #4";i:4;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #1";i:4;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #2";i:4;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #4";i:4;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #5";i:4;s:61:"Tests\Unit\ValidatorTest::testCustomEntities with data set #0";i:4;s:61:"Tests\Unit\ValidatorTest::testCustomEntities with data set #1";i:4;s:61:"Tests\Unit\ValidatorTest::testCustomEntities with data set #2";i:4;s:40:"Tests\Unit\ValidatorTest::testValidEmail";i:4;s:60:"Tests\Unit\ValidatorTest::testValidUsername with data set #0";i:4;s:60:"Tests\Unit\ValidatorTest::testValidUsername with data set #1";i:4;s:60:"Tests\Unit\ValidatorTest::testValidUsername with data set #2";i:4;s:60:"Tests\Unit\ValidatorTest::testValidUsername with data set #3";i:4;s:60:"Tests\Unit\ValidatorTest::testValidUsername with data set #4";i:4;s:61:"Tests\Unit\ValidatorTest::testValidGuestname with data set #1";i:4;s:61:"Tests\Unit\ValidatorTest::testValidGuestname with data set #2";i:4;s:61:"Tests\Unit\ValidatorTest::testValidGuestname with data set #3";i:4;s:61:"Tests\Unit\ValidatorTest::testValidGuestname with data set #4";i:4;s:60:"Tests\Unit\ValidatorTest::testValidPassword with data set #0";i:4;s:60:"Tests\Unit\ValidatorTest::testValidPassword with data set #1";i:4;s:60:"Tests\Unit\ValidatorTest::testValidPassword with data set #2";i:4;s:59:"Tests\Unit\ValidatorTest::testValidMessage with data set #0";i:4;s:59:"Tests\Unit\ValidatorTest::testValidMessage with data set #1";i:4;s:59:"Tests\Unit\ValidatorTest::testValidMessage with data set #3";i:4;s:63:"Tests\Unit\ValidatorTest::testValidAccessToken with data set #0";i:4;s:63:"Tests\Unit\ValidatorTest::testValidAccessToken with data set #1";i:4;s:63:"Tests\Unit\ValidatorTest::testValidAccessToken with data set #2";i:4;s:63:"Tests\Unit\ValidatorTest::testValidAccessToken with data set #3";i:4;s:55:"Tests\Unit\ValidatorTest::testValidInt with data set #0";i:4;s:55:"Tests\Unit\ValidatorTest::testValidInt with data set #1";i:4;s:55:"Tests\Unit\ValidatorTest::testValidInt with data set #2";i:4;s:55:"Tests\Unit\ValidatorTest::testValidInt with data set #3";i:4;s:55:"Tests\Unit\ValidatorTest::testValidInt with data set #4";i:4;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #8";i:4;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #9";i:4;s:58:"Tests\Unit\ValidatorTest::testValidColor with data set #10";i:4;s:61:"Tests\Unit\ValidatorTest::testSanitizeGender with data set #0";i:4;s:61:"Tests\Unit\ValidatorTest::testSanitizeGender with data set #1";i:4;s:61:"Tests\Unit\ValidatorTest::testSanitizeGender with data set #2";i:4;s:61:"Tests\Unit\ValidatorTest::testSanitizeGender with data set #3";i:4;s:49:"Tests\Unit\UpdateCheckerTest::testGetsConstructed";i:4;s:46:"Tests\Unit\UpdateCheckerTest::testInitialSetUp";i:5;s:58:"Tests\Unit\UpdateCheckerTest::testInitialSetUpDoesNotCrash";i:4;s:40:"Tests\Unit\UpdateCheckerTest::testStupid";i:4;s:58:"Tests\Unit\MessageSenderTest::testInitialSetUpDoesNotCrash";i:3;s:59:"Tests\Unit\InitialMessagesLoaderTest::testSetUpDoesNotCrash";i:4;s:71:"Tests\Unit\InitialMessagesLoaderTest::testSetUpAndFormatAndSendMessages";i:3;s:67:"Tests\Unit\OldMessagesLoaderTest::testSetUpAndFormatAndSendMessages";i:3;s:33:"Tests\Unit\UserCreatorTest::test1";i:5;s:33:"Tests\Unit\UserCreatorTest::test2";i:5;s:33:"Tests\Unit\UserCreatorTest::test3";i:5;s:70:"Tests\Unit\ValidatorTest::testGetExists with data set "array is empty"";i:3;s:71:"Tests\Unit\ValidatorTest::testPostExists with data set "array is empty"";i:3;s:78:"Tests\Unit\ValidatorTest::testValidMessage with data set "valid ascii message"";i:4;}s:5:"times";a:156:{s:15:"TestTest::test1";d:0.038;s:9:"xd::test1";d:0.011;s:16:"SuperTest::test1";d:0.021;s:27:"Tests\Unit\SuperTest::test1";d:0.024;s:44:"Tests\Unit\ValidatorTest::testGetExistsWorks";d:0.013;s:45:"Tests\Unit\ValidatorTest::testPostExistsWorks";d:0;s:50:"Tests\Unit\ValidatorTest::testValidByteLengthWorks";d:0;s:45:"Tests\Unit\ValidatorTest::testValidCharsWorks";d:0;s:49:"Tests\Unit\ValidatorTest::testCustomEntitiesWorks";d:0.001;s:39:"Tests\Unit\ValidatorTest::testGetExists";d:0.015;s:40:"Tests\Unit\ValidatorTest::testPostExists";d:0.002;s:45:"Tests\Unit\ValidatorTest::testValidByteLength";d:0.001;s:40:"Tests\Unit\ValidatorTest::testValidChars";d:0.002;s:44:"Tests\Unit\ValidatorTest::testCustomEntities";d:0;s:40:"Tests\Unit\ValidatorTest::testValidEmail";d:0.001;s:43:"Tests\Unit\ValidatorTest::testValidUsername";d:0;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #0";d:0;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #1";d:0;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #2";d:0;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #3";d:0.003;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #4";d:0;s:57:"Tests\Unit\ValidatorTest::testValidChars with data set #5";d:0;s:56:"Tests\Unit\ValidatorTest::testGetExists with data set #0";d:0.002;s:56:"Tests\Unit\ValidatorTest::testGetExists with data set #1";d:0;s:56:"Tests\Unit\ValidatorTest::testGetExists with data set #2";d:0;s:57:"Tests\Unit\ValidatorTest::testPostExists with data set #0";d:0;s:57:"Tests\Unit\ValidatorTest::testPostExists with data set #1";d:0;s:57:"Tests\Unit\ValidatorTest::testPostExists with data set #2";d:0;s:62:"Tests\Unit\ValidatorTest::testValidByteLength with data set #0";d:0;s:62:"Tests\Unit\ValidatorTest::testValidByteLength with data set #1";d:0;s:62:"Tests\Unit\ValidatorTest::testValidByteLength with data set #2";d:0;s:62:"Tests\Unit\ValidatorTest::testValidByteLength with data set #3";d:0;s:62:"Tests\Unit\ValidatorTest::testValidByteLength with data set #4";d:0;s:61:"Tests\Unit\ValidatorTest::testCustomEntities with data set #0";d:0;s:61:"Tests\Unit\ValidatorTest::testCustomEntities with data set #1";d:0;s:61:"Tests\Unit\ValidatorTest::testCustomEntities with data set #2";d:0;s:60:"Tests\Unit\ValidatorTest::testValidUsername with data set #0";d:0.001;s:60:"Tests\Unit\ValidatorTest::testValidUsername with data set #1";d:0;s:60:"Tests\Unit\ValidatorTest::testValidUsername with data set #2";d:0;s:60:"Tests\Unit\ValidatorTest::testValidUsername with data set #3";d:0;s:60:"Tests\Unit\ValidatorTest::testValidUsername with data set #4";d:0;s:61:"Tests\Unit\ValidatorTest::testValidGuestname with data set #0";d:0;s:61:"Tests\Unit\ValidatorTest::testValidGuestname with data set #1";d:0;s:61:"Tests\Unit\ValidatorTest::testValidGuestname with data set #2";d:0;s:61:"Tests\Unit\ValidatorTest::testValidGuestname with data set #3";d:0;s:61:"Tests\Unit\ValidatorTest::testValidGuestname with data set #4";d:0;s:60:"Tests\Unit\ValidatorTest::testValidPassword with data set #0";d:0;s:60:"Tests\Unit\ValidatorTest::testValidPassword with data set #1";d:0;s:60:"Tests\Unit\ValidatorTest::testValidPassword with data set #2";d:0;s:59:"Tests\Unit\ValidatorTest::testValidMessage with data set #0";d:0;s:59:"Tests\Unit\ValidatorTest::testValidMessage with data set #1";d:0;s:59:"Tests\Unit\ValidatorTest::testValidMessage with data set #2";d:0;s:59:"Tests\Unit\ValidatorTest::testValidMessage with data set #3";d:0;s:63:"Tests\Unit\ValidatorTest::testValidAccessToken with data set #0";d:0;s:63:"Tests\Unit\ValidatorTest::testValidAccessToken with data set #1";d:0;s:63:"Tests\Unit\ValidatorTest::testValidAccessToken with data set #2";d:0;s:63:"Tests\Unit\ValidatorTest::testValidAccessToken with data set #3";d:0;s:55:"Tests\Unit\ValidatorTest::testValidInt with data set #0";d:0;s:55:"Tests\Unit\ValidatorTest::testValidInt with data set #1";d:0;s:55:"Tests\Unit\ValidatorTest::testValidInt with data set #2";d:0;s:55:"Tests\Unit\ValidatorTest::testValidInt with data set #3";d:0;s:55:"Tests\Unit\ValidatorTest::testValidInt with data set #4";d:0;s:55:"Tests\Unit\ValidatorTest::testValidInt with data set #5";d:0;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #0";d:0;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #1";d:0;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #2";d:0;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #3";d:0;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #4";d:0;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #5";d:0;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #6";d:0;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #7";d:0;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #8";d:0;s:57:"Tests\Unit\ValidatorTest::testValidColor with data set #9";d:0;s:58:"Tests\Unit\ValidatorTest::testValidColor with data set #10";d:0;s:61:"Tests\Unit\ValidatorTest::testSanitizeGender with data set #0";d:0.001;s:61:"Tests\Unit\ValidatorTest::testSanitizeGender with data set #1";d:0;s:61:"Tests\Unit\ValidatorTest::testSanitizeGender with data set #2";d:0;s:61:"Tests\Unit\ValidatorTest::testSanitizeGender with data set #3";d:0;s:61:"Tests\Unit\ValidatorTest::testSanitizeGender with data set #4";d:0.031;s:7:"Warning";d:0.006;s:49:"Tests\Unit\UpdateCheckerTest::testGetsConstructed";d:0.025;s:46:"Tests\Unit\UpdateCheckerTest::testInitialSetUp";d:0.026;s:58:"Tests\Unit\UpdateCheckerTest::testInitialSetUpDoesNotCrash";d:0.012;s:40:"Tests\Unit\UpdateCheckerTest::testStupid";d:0;s:58:"Tests\Unit\MessageSenderTest::testInitialSetUpDoesNotCrash";d:0.014;s:59:"Tests\Unit\InitialMessagesLoaderTest::testSetUpDoesNotCrash";d:0.135;s:71:"Tests\Unit\InitialMessagesLoaderTest::testSetUpAndFormatAndSendMessages";d:0.016;s:67:"Tests\Unit\OldMessagesLoaderTest::testSetUpAndFormatAndSendMessages";d:0.007;s:33:"Tests\Unit\UserCreatorTest::test1";d:0;s:33:"Tests\Unit\UserCreatorTest::test2";d:0;s:33:"Tests\Unit\UserCreatorTest::test3";d:0;s:79:"Tests\Unit\ValidatorTest::testGetExists with data set "first and second exists"";d:0.007;s:73:"Tests\Unit\ValidatorTest::testGetExists with data set "only first exists"";d:0;s:74:"Tests\Unit\ValidatorTest::testGetExists with data set "only second exists"";d:0;s:70:"Tests\Unit\ValidatorTest::testGetExists with data set "array is empty"";d:0;s:80:"Tests\Unit\ValidatorTest::testPostExists with data set "first and second exists"";d:0;s:74:"Tests\Unit\ValidatorTest::testPostExists with data set "only first exists"";d:0;s:75:"Tests\Unit\ValidatorTest::testPostExists with data set "only second exists"";d:0;s:71:"Tests\Unit\ValidatorTest::testPostExists with data set "array is empty"";d:0;s:74:"Tests\Unit\ValidatorTest::testValidByteLength with data set "valid length"";d:0;s:84:"Tests\Unit\ValidatorTest::testValidByteLength with data set "valid identical length"";d:0;s:87:"Tests\Unit\ValidatorTest::testValidByteLength with data set "too long multibyte string"";d:0;s:71:"Tests\Unit\ValidatorTest::testValidByteLength with data set "too short"";d:0;s:70:"Tests\Unit\ValidatorTest::testValidByteLength with data set "too long"";d:0;s:85:"Tests\Unit\ValidatorTest::testValidChars with data set "valid with special character"";d:0;s:69:"Tests\Unit\ValidatorTest::testValidChars with data set "empty string"";d:0;s:68:"Tests\Unit\ValidatorTest::testValidChars with data set "only spaces"";d:0;s:82:"Tests\Unit\ValidatorTest::testValidChars with data set "invalid character C group"";d:0;s:76:"Tests\Unit\ValidatorTest::testValidChars with data set "invalid character Z"";d:0;s:80:"Tests\Unit\ValidatorTest::testValidChars with data set "invalid character other"";d:0;s:74:"Tests\Unit\ValidatorTest::testCustomEntities with data set "normal string"";d:0;s:90:"Tests\Unit\ValidatorTest::testCustomEntities with data set "all characters to be chganged"";d:0;s:90:"Tests\Unit\ValidatorTest::testCustomEntities with data set "same character multiple times"";d:0;s:74:"Tests\Unit\ValidatorTest::testValidUsername with data set "valid username"";d:0;s:69:"Tests\Unit\ValidatorTest::testValidUsername with data set "too short"";d:0;s:86:"Tests\Unit\ValidatorTest::testValidUsername with data set "contains invalid character"";d:0;s:78:"Tests\Unit\ValidatorTest::testValidUsername with data set "starts with Gość"";d:0;s:90:"Tests\Unit\ValidatorTest::testValidUsername with data set "contains invalid character (@)"";d:0;s:77:"Tests\Unit\ValidatorTest::testValidGuestname with data set "valid guest name"";d:0;s:70:"Tests\Unit\ValidatorTest::testValidGuestname with data set "too short"";d:0;s:87:"Tests\Unit\ValidatorTest::testValidGuestname with data set "contains invalid character"";d:0;s:83:"Tests\Unit\ValidatorTest::testValidGuestname with data set "does not contain space"";d:0;s:117:"Tests\Unit\ValidatorTest::testValidGuestname with data set "does not start with Gość but contains space and number"";d:0;s:74:"Tests\Unit\ValidatorTest::testValidPassword with data set "valid password"";d:0;s:69:"Tests\Unit\ValidatorTest::testValidPassword with data set "too short"";d:0;s:68:"Tests\Unit\ValidatorTest::testValidPassword with data set "too long"";d:0;s:78:"Tests\Unit\ValidatorTest::testValidMessage with data set "valid ascii message"";d:0;s:83:"Tests\Unit\ValidatorTest::testValidMessage with data set "valid message with emoji"";d:0;s:72:"Tests\Unit\ValidatorTest::testValidMessage with data set "empty message"";d:0;s:93:"Tests\Unit\ValidatorTest::testValidMessage with data set "too long with multibyte characters"";d:0;s:85:"Tests\Unit\ValidatorTest::testValidMessage with data set "contains invalid character"";d:0;s:88:"Tests\Unit\ValidatorTest::testValidAccessToken with data set "theoretically valid token"";d:0;s:85:"Tests\Unit\ValidatorTest::testValidAccessToken with data set "valid chars, too short"";d:0;s:84:"Tests\Unit\ValidatorTest::testValidAccessToken with data set "valid chars, too long"";d:0;s:90:"Tests\Unit\ValidatorTest::testValidAccessToken with data set "invalid chars, valid length"";d:0;s:71:"Tests\Unit\ValidatorTest::testValidInt with data set "normal valid int"";d:0;s:90:"Tests\Unit\ValidatorTest::testValidInt with data set "valid string to be converted in int"";d:0;s:68:"Tests\Unit\ValidatorTest::testValidInt with data set "invalid float"";d:0;s:67:"Tests\Unit\ValidatorTest::testValidInt with data set "invalid null"";d:0;s:69:"Tests\Unit\ValidatorTest::testValidInt with data set "invalid base16"";d:0;s:93:"Tests\Unit\ValidatorTest::testValidColor with data set "only zeros (minimal accepted values)"";d:0;s:80:"Tests\Unit\ValidatorTest::testValidColor with data set "maximal accepted values"";d:0;s:76:"Tests\Unit\ValidatorTest::testValidColor with data set "random valid values"";d:0;s:72:"Tests\Unit\ValidatorTest::testValidColor with data set "one int too big"";d:0;s:69:"Tests\Unit\ValidatorTest::testValidColor with data set "float to big"";d:0;s:72:"Tests\Unit\ValidatorTest::testValidColor with data set "only two values"";d:0;s:81:"Tests\Unit\ValidatorTest::testValidColor with data set "float where int expected"";d:0;s:83:"Tests\Unit\ValidatorTest::testValidColor with data set "only commas with no values"";d:0;s:83:"Tests\Unit\ValidatorTest::testValidColor with data set "letters instead of numbers"";d:0;s:85:"Tests\Unit\ValidatorTest::testValidColor with data set "negative number on int place"";d:0;s:87:"Tests\Unit\ValidatorTest::testValidColor with data set "negative number on float place"";d:0;s:71:"Tests\Unit\ValidatorTest::testValidColor with data set "trailing comma"";d:0;s:80:"Tests\Unit\ValidatorTest::testSanitizeGender with data set "male given expected"";d:0;s:86:"Tests\Unit\ValidatorTest::testSanitizeGender with data set "female given and expected"";d:0;s:85:"Tests\Unit\ValidatorTest::testSanitizeGender with data set "other given adn expected"";d:0;s:99:"Tests\Unit\ValidatorTest::testSanitizeGender with data set "random string given and other expected"";d:0;}}}